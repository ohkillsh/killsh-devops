name: 1.0.$(Rev:r)

trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

resources: 
  repositories:
  - repository: ci-templates
    type: github
    name: ohkillsh/ci-templates
    endpoint: ohkillsh
    ref: refs/heads/main

parameters: # Runtime Execution
  - name: runTFsec
    displayName: Run Terrafom TFsec?
    type: boolean
    default: false

  - name: runCheckChanges
    displayName: Run Terrafom CheckChanges?
    type: boolean
    default: false

variables:
  TF-BACKEND-RESOURCEGROUP: "rg-global-ohkillsh-tf"
  TF-BACKEND-STGNAME: "stgtfglobalohkillsh"
  TF-BACKEND-STGCONTAINER: "terraform"
  TF-BACKEND-STGKEY: "ohkillsh.infra.tfstate"
  TF-Keyvault-Name: kv-global-ohkillsh-tf
  TF-Environment-Name: dev
  TF-Path: 'infra/ohkillsh'
  TF-Subscription-ID: "az-test"
  tf_in_automation: true
  tf_parallelism: 20
  known_host: "ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H"

stages:
  - stage: PLAN
    displayName: "Terraform - Plan"
    jobs:
    - job:
      steps: 

        - template: Common.Templates/Process/pre_job.yaml@ci-templates
          parameters:
            subscription-id: $(TF-Subscription-ID)
            KeyVaultName: $(TF-Keyvault-Name)

        - task: InstallSSHKey@0 # Chave SSH para baixar os m√≥dulos do projeto de terraform
          inputs:
            knownHostsEntry: $(known_host)
            sshKeySecureFile: id_rsa

        - template: Common.Templates/Terraform/stage_plan.yaml@ci-templates

  - stage: APPLY
    jobs:
      - deployment: ApplyStage
        displayName: "Terraform - Apply"
        environment: $(TF-Environment-Name)
        workspace:
          clean: all
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: none

                - task: AzureKeyVault@1
                  inputs:
                    azureSubscription: $(TF-Subscription-ID)
                    KeyVaultName: $(TF-KeyVault-Name)
                    SecretsFilter: "*"
                    RunAsPreJob: true
                  displayName: "Load Secrets from Azure KeyVault"

                - template: Common.Templates/Process/pre_job.yaml@ci-templates
                  parameters:
                    subscription-id: $(TF-Subscription-ID)
                    KeyVaultName: $(TF-Keyvault-Name)
                - template: Common.Templates/Terraform/stage_apply.yaml@ci-templates